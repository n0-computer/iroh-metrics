var searchIndex = new Map(JSON.parse('[["iroh_metrics",{"t":"FGFKPKKFKKPFNNNNNNNNNNNNNNNNNNNNNNONQNQNNNOOONONNNNNNNNNNNNNONNNNQNNQOONNNNNMCMMMMONNNNHONNNNCONNQNCENNNNNNNNNNNNNNNONNNNNOFKINNNNNNNMNONNNOONOOHHHNNNNOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Counter","Error","Gauge","HistogramType","Io","Metric","MetricExt","MetricItem","MetricSet","MetricType","NoMetrics","PushMetricsConfig","borrow","","","","","borrow_mut","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","counter","dec","","dec_by","","default","describe","","description","","","deserialize","endpoint","eq","fmt","","","","","","from","","","","","","gauge","get","","inc","","","inc_by","","","instance_name","interval","into","","","","","iter","metrics","name","","","","","new","","","","parse_prometheus_metrics","password","register","","register_all","","service","service_name","set","","","source","static_core","struct_iterable","to_owned","","","","to_string","try_from","","","","","try_into","","","","","type","type_id","","","","","username","MetricsExporterConfig","MetricsSource","RwLockRegistry","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deserialize","encode_openmetrics","","endpoint","eq","fmt","from","instance_name","interval","into","password","service_name","start_metrics_dumper","start_metrics_exporter","start_metrics_server","to_owned","try_from","try_into","type_id","username","Core","GlobalRegistry","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","encode","encode_openmetrics","fmt","","from","","get","get_collector","init","into","","registry","to_owned","try_from","","try_init","try_into","","type_id",""],"q":[[0,"iroh_metrics"],[123,"iroh_metrics::service"],[152,"iroh_metrics::static_core"],[182,"iroh_metrics::base"],[183,"alloc::vec"],[184,"core::result"],[185,"serde::de"],[186,"core::fmt"],[187,"std::io::error"],[188,"core::iter::traits::collect"],[189,"prometheus_client::registry"],[190,"alloc::string"],[191,"std::collections::hash::map"],[192,"core::error"],[193,"core::option"],[194,"core::any"],[195,"std::path"],[196,"core::time"],[197,"core::net::socket_addr"],[198,"core::clone"],[199,"erased_set"],[200,"core::ops::function"]],"i":"````Bb`````0`fhj3l3214032103210321032`2`0Ad043211143255143255134343`43`1143251Bh`10C`Cb5Cf087`54433`587`9``8765987695876956876955```Dd000000DfDh222222222```22222``EdEf10111001101000010011001010","f":"````````````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{{b{l}}}l}{{b{b{dc}}}n{}}000{{bA`}n}000`{{{b{h}}}Ab}`{{{b{h}}Ab}Ab}`{{}l}{{{b{Ad}}}{{Af{j}}}}0```{c{{Ah{l}}}Aj}`{{{b{l}}{b{l}}}Al}{{{b{f}}{b{dAn}}}B`}{{{b{h}}{b{dAn}}}B`}{{{b{j}}{b{dAn}}}B`}{{{b{Bb}}{b{dAn}}}B`}0{{{b{l}}{b{dAn}}}B`}{cc{}}000{BdBb}1`{{{b{f}}}Bf}=0=`{{{b{f}}Bf}Bf}=```{{}c{}}0000{{{b{Bh}}}{{`{{Bl{}{{Bj{{b{Ad}}}}}}}}}}`{{{b{Ad}}}{{b{Bn}}}}{{{b{Bh}}}{{b{Bn}}}}{{{b{C`}}}{{b{Bn}}}}{{{b{Cb}}}{{b{Bn}}}}`{{{b{dCd}}}Cf}0{{{b{Bn}}}f}{{{b{Bn}}}h}{{{b{Bn}}}{{Cl{ChCj}}}}`{{{b{Ad}}{b{dCd}}}n}0{{{b{Bh}}{b{dCd}}}n}0``<{{{b{h}}Ab}Ab}`{{{b{Bb}}}{{D`{{b{Cn}}}}}}``{bc{}}000{bCh}{c{{Ah{e}}}{}{}}0000{{}{{Ah{c}}}{}}0000`{bDb}0000````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Dd}}}Dd}{{b{b{dc}}}n{}}{{bA`}n}{{}Dd}{c{{Ah{Dd}}}Aj}{{{b{Df}}}{{Ah{ChBb}}}}{{{b{Dh}}}{{Ah{ChBb}}}}`{{{b{Dd}}{b{Dd}}}Al}{{{b{Dd}}{b{dAn}}}B`}{cc{}}``{{}c{}}``{{DjDlc}{{Ah{nBb}}}Df}{{Ddc}nDf}{{Dnc}{{E`{n}}}{DfEb}}{bc{}}{c{{Ah{e}}}{}{}}{{}{{Ah{c}}}{}}{bDb}```{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Ed}}}Ed}{{b{b{dc}}}n{}}{{bA`}n}{{}Ef}{{{b{Ef}}}Ch}{{{b{Ed}}}{{Ah{ChBb}}}}{{{b{Ed}}{b{dAn}}}B`}{{{b{Ef}}{b{dAn}}}B`}{cc{}}0{{}{{D`{{b{Ef}}}}}}{{{b{Ef}}}{{D`{{b{c}}}}}Ad}{cn{{Ej{{b{dCd}}{b{dEh}}}}}}{{}c{}}0{{{b{Ef}}}{{b{Cd}}}}{bc{}}{c{{Ah{e}}}{}{}}0{c{{E`{n}}}{{Ej{{b{dCd}}{b{dEh}}}}}}{{}{{Ah{c}}}{}}0{bDb}0","D":"Ld","p":[[1,"reference",null,null,1],[0,"mut"],[5,"Counter",0,182],[5,"Gauge",0,182],[5,"MetricItem",0,182],[5,"PushMetricsConfig",0],[1,"unit"],[1,"u8"],[1,"i64"],[10,"Metric",0,182],[5,"Vec",183],[6,"Result",184,null,1],[10,"Deserializer",185],[1,"bool"],[5,"Formatter",186],[8,"Result",186],[6,"Error",0],[5,"Error",187],[1,"u64"],[10,"MetricSet",0,182],[17,"Item"],[10,"IntoIterator",188],[1,"str"],[10,"MetricType",0,182],[10,"HistogramType",0,182],[5,"Registry",189],[10,"MetricExt",0,182],[5,"String",190],[1,"f64"],[5,"HashMap",191],[10,"Error",192],[6,"Option",193,null,1],[5,"TypeId",194],[5,"MetricsExporterConfig",123],[10,"MetricsSource",123],[8,"RwLockRegistry",123],[5,"PathBuf",195],[5,"Duration",196],[6,"SocketAddr",197],[8,"Result",187],[10,"Clone",198],[5,"GlobalRegistry",152],[5,"Core",152],[5,"ErasedSyncSet",199],[10,"FnOnce",200]],"r":[[0,182],[2,182],[3,182],[5,182],[6,182],[7,182],[8,182],[9,182]],"b":[[51,"impl-Debug-for-Error"],[52,"impl-Display-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAFQAEAANABUAKAAAAC4AAAAwAAYAOwAAAGMAAABmAA4AdgAEAH8ABgCHAAAAiQABAJQAAwCbAAcApAACAK8AAgCzAAMA","P":[[12,"T"],[22,""],[26,"T"],[30,""],[45,"__D"],[47,""],[54,"T"],[58,""],[59,"T"],[61,""],[71,"U"],[76,""],[101,"T"],[105,""],[106,"U,T"],[111,"U"],[117,""],[126,"T"],[128,""],[129,"T"],[130,""],[132,"__D"],[133,""],[138,"T"],[141,"U"],[144,""],[147,"T"],[148,"U,T"],[149,"U"],[150,""],[154,"T"],[158,""],[159,"T"],[160,""],[166,"T"],[168,""],[169,"T"],[170,"F"],[171,"U"],[173,""],[174,"T"],[175,"U,T"],[177,"F"],[178,"U"],[180,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[5326]}