var searchIndex = new Map(JSON.parse('[["iroh_metrics",{"t":"FFGFFKPKKFKKPNNNNNNNNNNNNNNNNNOONQNQNNOOOOONNNNNNNNNNOONNNNQNNQNNNNMMMMMONNNNHNNNNCNNQNCENNNNNNNNNNNNONNNNFKINNNNNNNMNONNNOONOOHHHNNNNOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Counter","","Error","Gauge","","HistogramType","Io","Metric","MetricExt","MetricItem","MetricSet","MetricType","NoMetrics","borrow","","","","borrow_mut","","","","clone","","","clone_into","","","clone_to_uninit","","","counter","","dec","","dec_by","","describe","","description","","","","","fmt","","","","","from","","","","","gauge","","get","","inc","","","inc_by","","","into","","","","iter","name","","","","","new","","","","parse_prometheus_metrics","register","","","","service","set","","","source","static_core","struct_iterable","to_owned","","","to_string","try_from","","","","try_into","","","","type","type_id","","","","MetricsExporterConfig","MetricsSource","RwLockRegistry","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deserialize","encode_openmetrics","","endpoint","eq","fmt","from","instance_name","interval","into","password","service_name","start_metrics_dumper","start_metrics_exporter","start_metrics_server","to_owned","try_from","try_into","type_id","username","Core","GlobalRegistry","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","encode","encode_openmetrics","fmt","","from","","get","get_collector","init","into","","registry","to_owned","try_from","","try_init","try_into","","type_id",""],"q":[[0,"iroh_metrics"],[106,"iroh_metrics::service"],[135,"iroh_metrics::static_core"],[165,"iroh_metrics::base"],[166,"iroh_metrics::metrics"],[167,"alloc::vec"],[168,"core::fmt"],[169,"std::io::error"],[170,"core::iter::traits::collect"],[171,"prometheus_client::registry"],[172,"alloc::string"],[173,"std::collections::hash::map"],[174,"core::error"],[175,"core::option"],[176,"core::result"],[177,"core::any"],[178,"serde::de"],[179,"std::path"],[180,"core::time"],[181,"core::net::socket_addr"],[182,"core::clone"],[183,"erased_set"],[184,"core::ops::function"]],"i":"``````Aj`````0fhj32103210210210110`0`Ab0322113214432144112121`21`3214B`10BhBj6Bn065`4433`65`8``76587658765877658```Cn000000DbDd222222222```22222``EbEd10111001101000010011001010","f":"`````````````{b{{b{c}}}{}}000{{{b{d}}}{{b{dc}}}{}}000{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{b{b{dc}}}l{}}00{{bn}l}00``{{{b{j}}}A`}`{{{b{j}}A`}A`}`{{{b{Ab}}}{{Ad{f}}}}0`````{{{b{f}}{b{dAf}}}Ah}{{{b{h}}{b{dAf}}}Ah}{{{b{j}}{b{dAf}}}Ah}{{{b{Aj}}{b{dAf}}}Ah}0{cc{}}000{AlAj}``{{{b{h}}}An}909`{{{b{h}}An}An}9`{{}c{}}000{{{b{B`}}}{{`{{Bd{}{{Bb{{b{Ab}}}}}}}}}}{{{b{Ab}}}{{b{Bf}}}}{{{b{B`}}}{{b{Bf}}}}{{{b{Bh}}}{{b{Bf}}}}{{{b{Bj}}}{{b{Bf}}}}`{{{b{dBl}}}Bn}0{{{b{Bf}}}h}{{{b{Bf}}}j}{{{b{Bf}}}{{Cd{C`Cb}}}}{{{b{Ab}}{b{dBl}}}l}0{{{b{B`}}{b{dBl}}}l}0`<{{{b{j}}A`}A`}`{{{b{Aj}}}{{Ch{{b{Cf}}}}}}``{bc{}}00{bC`}{c{{Cj{e}}}{}{}}000{{}{{Cj{c}}}{}}000`{bCl}000```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Cn}}}Cn}{{b{b{dc}}}l{}}{{bn}l}{{}Cn}{c{{Cj{Cn}}}D`}{{{b{Db}}}{{Cj{C`Aj}}}}{{{b{Dd}}}{{Cj{C`Aj}}}}`{{{b{Cn}}{b{Cn}}}Df}{{{b{Cn}}{b{dAf}}}Ah}{cc{}}``{{}c{}}``{{DhDjc}{{Cj{lAj}}}Db}{{Cnc}lDb}{{Dlc}{{Dn{l}}}{DbE`}}{bc{}}{c{{Cj{e}}}{}{}}{{}{{Cj{c}}}{}}{bCl}```{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Eb}}}Eb}{{b{b{dc}}}l{}}{{bn}l}{{}Ed}{{{b{Ed}}}C`}{{{b{Eb}}}{{Cj{C`Aj}}}}{{{b{Eb}}{b{dAf}}}Ah}{{{b{Ed}}{b{dAf}}}Ah}{cc{}}0{{}{{Ch{{b{Ed}}}}}}{{{b{Ed}}}{{Ch{{b{c}}}}}Ab}{cl{{Eh{{b{dBl}}{b{dEf}}}}}}{{}c{}}0{{{b{Ed}}}{{b{Bl}}}}{bc{}}{c{{Cj{e}}}{}{}}0{c{{Dn{l}}}{{Eh{{b{dBl}}{b{dEf}}}}}}{{}{{Cj{c}}}{}}0{bCl}0","D":"Kl","p":[[1,"reference",null,null,1],[0,"mut"],[5,"MetricItem",0,165],[5,"Counter",0,166],[5,"Gauge",0,166],[1,"unit"],[1,"u8"],[1,"i64"],[10,"Metric",0,165],[5,"Vec",167],[5,"Formatter",168],[8,"Result",168],[6,"Error",0],[5,"Error",169],[1,"u64"],[10,"MetricSet",0,165],[17,"Item"],[10,"IntoIterator",170],[1,"str"],[10,"MetricType",0,165],[10,"HistogramType",0,165],[5,"Registry",171],[10,"MetricExt",0,165],[5,"String",172],[1,"f64"],[5,"HashMap",173],[10,"Error",174],[6,"Option",175,null,1],[6,"Result",176,null,1],[5,"TypeId",177],[5,"MetricsExporterConfig",106],[10,"Deserializer",178],[10,"MetricsSource",106],[8,"RwLockRegistry",106],[1,"bool"],[5,"PathBuf",179],[5,"Duration",180],[6,"SocketAddr",181],[8,"Result",169],[10,"Clone",182],[5,"GlobalRegistry",135],[5,"Core",135],[5,"ErasedSyncSet",183],[10,"FnOnce",184]],"r":[[0,166],[1,166],[3,166],[4,166],[5,165],[7,165],[8,165],[9,165],[10,165],[11,165]],"b":[[46,"impl-Display-for-Error"],[47,"impl-Debug-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEcADgAOABAALAAEADUAAABXAAAAWgALAGcAAwBuAAYAdgAAAHgAAQCDAAMAigAHAJMAAgCeAAIAogADAA==","P":[[13,"T"],[21,""],[24,"T"],[27,""],[48,"T"],[52,""],[63,"U"],[67,""],[89,"T"],[92,""],[93,"U,T"],[97,"U"],[102,""],[109,"T"],[111,""],[112,"T"],[113,""],[115,"__D"],[116,""],[121,"T"],[124,"U"],[127,""],[130,"T"],[131,"U,T"],[132,"U"],[133,""],[137,"T"],[141,""],[142,"T"],[143,""],[149,"T"],[151,""],[152,"T"],[153,"F"],[154,"U"],[156,""],[157,"T"],[158,"U,T"],[160,"F"],[161,"U"],[163,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[5019]}