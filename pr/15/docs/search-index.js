var searchIndex = new Map(JSON.parse('[["iroh_metrics",{"t":"FGFKPKKFKKPFNNNNNNNNNNNNNNNNNNNONQNQNNNOOONNNNNNNNNNNNNONNNNQNNQNNNNNMMMMMONNNNHNNNNNNNCNNQNCENNNNNNNNNNNNNNNNNONNNNNNNNFKINNNNNNNMNONNNOONOOHHHNNNNOFFNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Counter","Error","Gauge","HistogramType","Io","Metric","MetricExt","MetricItem","MetricSet","MetricType","NoMetrics","Registry","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","counter","dec","","dec_by","","default","describe","","description","","","encode_openmetrics","fmt","","","","","","from","","","","","","gauge","get","","inc","","","inc_by","","","into","","","","","iter","name","","","","","new","","","","parse_prometheus_metrics","register","","","","","register_collector","register_with_unit","service","set","","","source","static_core","struct_iterable","sub_registry_with_label","sub_registry_with_labels","sub_registry_with_prefix","to_owned","","","to_string","try_from","","","","","try_into","","","","","type","type_id","","","","","with_labels","with_prefix","with_prefix_and_labels","MetricsExporterConfig","MetricsSource","RwLockRegistry","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deserialize","encode_openmetrics","","endpoint","eq","fmt","from","instance_name","interval","into","password","service_name","start_metrics_dumper","start_metrics_exporter","start_metrics_server","to_owned","try_from","try_into","type_id","username","Core","GlobalRegistry","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","encode","encode_openmetrics","fmt","","from","","get","get_collector","init","into","","registry","to_owned","try_from","","try_init","try_into","","type_id",""],"q":[[0,"iroh_metrics"],[120,"iroh_metrics::service"],[149,"iroh_metrics::static_core"],[179,"iroh_metrics::base"],[180,"iroh_metrics::metrics"],[181,"prometheus_client::registry"],[182,"alloc::vec"],[183,"alloc::string"],[184,"core::result"],[185,"core::fmt"],[186,"std::io::error"],[187,"core::iter::traits::collect"],[188,"std::collections::hash::map"],[189,"core::convert"],[190,"prometheus_client::collector"],[191,"alloc::boxed"],[192,"core::error"],[193,"core::option"],[194,"alloc::borrow"],[195,"core::iter::traits::iterator"],[196,"core::any"],[197,"serde::de"],[198,"std::path"],[199,"core::time"],[200,"core::net::socket_addr"],[201,"core::clone"],[202,"erased_set"],[203,"core::ops::function"]],"i":"````Aj`````0`fhj3Ab3214032132132121`1`0Ad0432143255143255123232`32`43251Bh10C`Cb7Cd076`4433555`76`9``55587698769587695887695555```Eb000000EfEh222222222```22222``FfFh10111001101000010011001010","f":"````````````{b{{b{c}}}{}}0000{{{b{d}}}{{b{dc}}}{}}0000{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{b{b{dc}}}l{}}00{{bn}l}00`{{{b{j}}}A`}`{{{b{j}}A`}A`}`{{}Ab}{{{b{Ad}}}{{Af{f}}}}0```{{{b{Ab}}}{{Al{AhAj}}}}{{{b{f}}{b{dAn}}}B`}{{{b{h}}{b{dAn}}}B`}{{{b{j}}{b{dAn}}}B`}{{{b{Aj}}{b{dAn}}}B`}0{{{b{Ab}}{b{dAn}}}{{Al{lBb}}}}{cc{}}000{BdAj}1`{{{b{h}}}Bf}<0<`{{{b{h}}Bf}Bf}<`{{}c{}}0000{{{b{Bh}}}{{`{{Bl{}{{Bj{{b{Ad}}}}}}}}}}{{{b{Ad}}}{{b{Bn}}}}{{{b{Bh}}}{{b{Bn}}}}{{{b{C`}}}{{b{Bn}}}}{{{b{Cb}}}{{b{Bn}}}}`{{{b{dAb}}}Cd}0{{{b{Bn}}}h}{{{b{Bn}}}j}{{{b{Bn}}}{{Ch{AhCf}}}}{{{b{Ad}}{b{dAb}}}l}0{{{b{Bh}}{b{dAb}}}l}0{{{b{dAb}}ceg}l{{Cj{Ah}}}{{Cj{Ah}}}Cl}{{{b{dAb}}{D`{Cn}}}l}{{{b{dAb}}ceDbg}l{{Cj{Ah}}}{{Cj{Ah}}}Cl}`?{{{b{j}}A`}A`}`{{{b{Aj}}}{{Df{{b{Dd}}}}}}``{{{b{dAb}}{Dj{{Dh{Bn}}{Dh{Bn}}}}}{{b{dAb}}}}{{{b{dAb}}c}{{b{dAb}}}{{Dl{}{{Bj{{Dj{{Dh{Bn}}{Dh{Bn}}}}}}}}}}{{{b{dAb}}c}{{b{dAb}}}{{Dn{Bn}}}}{bc{}}00{bAh}{c{{Al{e}}}{}{}}0000{{}{{Al{c}}}{}}0000`{bE`}0000{cAb{{Dl{}{{Bj{{Dj{{Dh{Bn}}{Dh{Bn}}}}}}}}}}{cAb{{Cj{Ah}}}}{{ce}Ab{{Cj{Ah}}}{{Dl{}{{Bj{{Dj{{Dh{Bn}}{Dh{Bn}}}}}}}}}}```{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Eb}}}Eb}{{b{b{dc}}}l{}}{{bn}l}{{}Eb}{c{{Al{Eb}}}Ed}{{{b{Ef}}}{{Al{AhAj}}}}{{{b{Eh}}}{{Al{AhAj}}}}`{{{b{Eb}}{b{Eb}}}Ej}{{{b{Eb}}{b{dAn}}}B`}{cc{}}``{{}c{}}``{{ElEnc}{{Al{lAj}}}Ef}{{Ebc}lEf}{{F`c}{{Fb{l}}}{EfFd}}{bc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bE`}```{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Ff}}}Ff}{{b{b{dc}}}l{}}{{bn}l}{{}Fh}{{{b{Fh}}}Ah}{{{b{Ff}}}{{Al{AhAj}}}}{{{b{Ff}}{b{dAn}}}B`}{{{b{Fh}}{b{dAn}}}B`}{cc{}}0{{}{{Df{{b{Fh}}}}}}{{{b{Fh}}}{{Df{{b{c}}}}}Ad}{cl{{Fl{{b{dAb}}{b{dFj}}}}}}{{}c{}}0{{{b{Fh}}}{{b{Ab}}}}{bc{}}{c{{Al{e}}}{}{}}0{c{{Fb{l}}}{{Fl{{b{dAb}}{b{dFj}}}}}}{{}{{Al{c}}}{}}0{bE`}0","D":"Lh","p":[[1,"reference",null,null,1],[0,"mut"],[5,"MetricItem",0,179],[5,"Counter",0,180],[5,"Gauge",0,180],[1,"unit"],[1,"u8"],[1,"i64"],[5,"Registry",0,181],[10,"Metric",0,179],[5,"Vec",182],[5,"String",183],[6,"Error",0],[6,"Result",184,null,1],[5,"Formatter",185],[8,"Result",185],[5,"Error",185],[5,"Error",186],[1,"u64"],[10,"MetricSet",0,179],[17,"Item"],[10,"IntoIterator",187],[1,"str"],[10,"MetricType",0,179],[10,"HistogramType",0,179],[10,"MetricExt",0,179],[1,"f64"],[5,"HashMap",188],[10,"Into",189],[10,"Metric",181],[10,"Collector",190],[5,"Box",191,null,1],[6,"Unit",181],[10,"Error",192],[6,"Option",193,null,1],[6,"Cow",194],[1,"tuple",null,null,1],[10,"Iterator",195],[10,"AsRef",189],[5,"TypeId",196],[5,"MetricsExporterConfig",120],[10,"Deserializer",197],[10,"MetricsSource",120],[8,"RwLockRegistry",120],[1,"bool"],[5,"PathBuf",198],[5,"Duration",199],[6,"SocketAddr",200],[8,"Result",186],[10,"Clone",201],[5,"GlobalRegistry",149],[5,"Core",149],[5,"ErasedSyncSet",202],[10,"FnOnce",203]],"r":[[0,180],[2,180],[3,179],[5,179],[6,179],[7,179],[8,179],[9,179],[11,181]],"b":[[46,"impl-Display-for-Error"],[47,"impl-Debug-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE8ADwANABIAJQAAACsABgA2AAAAXAAAAGIADQBxAAQAfAAGAIQAAACGAAEAkQADAJgABwChAAIArAACALAAAwA=","P":[[12,"T"],[22,""],[25,"T"],[28,""],[49,"T"],[53,""],[54,"T"],[56,""],[64,"U"],[69,""],[84,"N,H,"],[85,""],[86,"N,H,"],[88,""],[95,""],[96,"P"],[97,"T"],[100,""],[101,"U,T"],[106,"U"],[112,""],[117,""],[119,","],[123,"T"],[125,""],[126,"T"],[127,""],[129,"__D"],[130,""],[135,"T"],[138,"U"],[141,""],[144,"T"],[145,"U,T"],[146,"U"],[147,""],[151,"T"],[155,""],[156,"T"],[157,""],[163,"T"],[165,""],[166,"T"],[167,"F"],[168,"U"],[170,""],[171,"T"],[172,"U,T"],[174,"F"],[175,"U"],[177,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[6100]}